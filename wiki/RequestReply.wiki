With asynchronous messaging, request reply should be used sparingly. It is usually better to avoid the blocking nature of request reply and use basic pub/sub instead. For those rare cases when request/reply is required, Retlang supports a simple interface to exchange data.

=== Request ===

{{{
IProcessContext context = ... 

IRequestReply<string> req = context.SendRequest<string>("my.topic", "data");

string reply = req.Receive(5000).Message;

}}}

=== Reply ===

{{{
IProcessContext context2 = ...
OnMessage<string> onMsg = delegate(IMessageHeader header, string msg) 
{ 
  context2.Publish(header.ReplyTo, "reply to: " + msg); 
};
context2.Subscribe(new TopicEquals("my.topic"), onMsg);

}}}