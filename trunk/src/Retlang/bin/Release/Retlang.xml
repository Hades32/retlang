<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Retlang</name>
    </assembly>
    <members>
        <member name="T:Retlang.ObjectTransferEnvelope">
            <summary>
            Transfer objects between contexts without serialization.
            </summary>
        </member>
        <member name="T:Retlang.ITransferEnvelope">
            <summary>
            Packages a message for transfer between contexts.
            </summary>
        </member>
        <member name="M:Retlang.ITransferEnvelope.ResolveMessage">
            <summary>
            Called when the message is delivered to an individual subscriber.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Retlang.ITransferEnvelope.MessageType">
            <summary>
            The type of the message contained in the envelope.
            </summary>
        </member>
        <member name="P:Retlang.ITransferEnvelope.Header">
            <summary>
            The topic and reply topic of the message.
            </summary>
        </member>
        <member name="M:Retlang.ObjectTransferEnvelope.#ctor(System.Object,Retlang.IMessageHeader)">
            <summary>
            </summary>
            <param name="obj">data to publish</param>
            <param name="header">header</param>
        </member>
        <member name="M:Retlang.IProcessBus.Post(System.Object,System.Object,System.Object)">
            <summary>
            Posts a message to this context only. The message is not broadcast.
            Returns true if a subscriber is found.
            </summary>
            <param name="topic"></param>
            <param name="msg"></param>
        </member>
        <member name="E:Retlang.IProcessBus.QueueFullEvent">
            <summary>
            Callback from any and all publishing threads. Not Thread Safe.
            Will only happen if the max size of the queue and the max wait times are set.
            </summary>
        </member>
        <member name="P:Retlang.CommandExecutor.IsEnabled">
            <summary>
            When disabled, commands will be ignored by executor. The executor is typically disabled at shutdown
            to prevent any pending commands from being executed. 
            </summary>
        </member>
        <member name="M:Retlang.ISubscriber.Receive(Retlang.ITransferEnvelope,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="envelope"></param>
            <param name="consumed">set to true ONLY if the subscriber consumes the event. Do NOT set to false since events are invoked using a multicast event</param>
        </member>
        <member name="M:Retlang.KeyedBatchSubscriber`2.ReceiveMessage(Retlang.IMessageHeader,`1)">
            <summary>
            received on delivery thread
            </summary>
            <param name="header"></param>
            <param name="msg"></param>
        </member>
        <member name="M:Retlang.KeyedBatchSubscriber`2.Flush">
            <summary>
            Flushed from process thread
            </summary>
        </member>
    </members>
</doc>
